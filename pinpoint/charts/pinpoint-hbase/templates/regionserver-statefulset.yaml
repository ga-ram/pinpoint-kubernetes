apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hbase.fullname" . }}-regionserver
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
  labels:
    app.kubernetes.io/name: {{ include "hbase.name" . }}
    app.kubernetes.io/component: regionserver
    {{- include "hbase.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hbase.name" . }}
      app.kubernetes.io/component: regionserver
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  serviceName: {{ include "hbase.fullname" . }}-regionserver
  replicas: {{ .Values.hbase.regionServer.replicas }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hbase.name" . }}
        app.kubernetes.io/component: regionserver
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
    spec:
      affinity:
        podAntiAffinity:
        {{- if eq .Values.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: {{ include "hbase.name" . }}
                app.kubernetes.io/component: regionserver
                {{- include "hbase.labels" . | nindent 16 }}            
        {{- else if eq .Values.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ include "hbase.name" . }}
                  app.kubernetes.io/component: regionserver
                  {{- include "hbase.labels" . | nindent 18 }}
        {{- end }}
      containers:
      - name: regionserver
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command:
           - "/bin/bash"
           - "/tmp/hbase-config/bootstrap.sh"
           - "-d"
           - "regionserver"
        env:
        - name: HADOOP_USER_NAME
          value: {{ .Values.conf.hadoopUserName }}
        resources:
{{ toYaml .Values.hbase.regionServer.resources | indent 10 }}
        {{- if .Values.hbase.regionServer.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /
            port: 16030
          initialDelaySeconds: {{ .Values.hbase.regionServer.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.hbase.regionServer.readinessProbe.timeoutSeconds }}
        {{- end }}
        {{- if .Values.hbase.regionServer.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /
            port: 16030
          initialDelaySeconds: {{ .Values.hbase.regionServer.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.hbase.regionServer.livenessProbe.timeoutSeconds }}
        {{- end }}
        volumeMounts:
        - name: hbase-config
          mountPath: /tmp/hbase-config
      volumes:
      - name: hbase-config
        configMap:
          name: {{ include "hbase.fullname" . }}
